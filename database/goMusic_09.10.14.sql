-- MySQL Script generated by MySQL Workbench
-- 10/10/14 21:34:00
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema goMusic
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `goMusic` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `goMusic` ;

-- -----------------------------------------------------
-- Table `goMusic`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `parent_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `alias` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `first_name` VARCHAR(255) NULL,
  `last_name` VARCHAR(255) NULL,
  `birthday` DATETIME NULL,
  `phone` VARCHAR(255) NULL,
  `location_id` INT NULL,
  `sex_id` INT NOT NULL DEFAULT 1,
  `state_id` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_user_location1_idx` (`location_id` ASC),
  INDEX `fk_user_type1_idx` (`sex_id` ASC),
  INDEX `fk_user_type2_idx` (`state_id` ASC),
  CONSTRAINT `fk_user_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `goMusic`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_type1`
    FOREIGN KEY (`sex_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_type2`
    FOREIGN KEY (`state_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`singer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`singer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `site` VARCHAR(255) NULL,
  `image_id` INT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_singer_user1` (`user_id` ASC),
  CONSTRAINT `fk_singer_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`style`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`style` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `parent_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`translation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`translation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `object` VARCHAR(255) NOT NULL,
  `subject` VARCHAR(255) NOT NULL,
  `row_id` INT NOT NULL,
  `lan_id` INT NOT NULL,
  `translate` VARCHAR(255) NOT NULL,
  `update_time` TIMESTAMP NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_translation_language1` (`lan_id` ASC),
  UNIQUE INDEX `objec_id_UNIQUE` (`object` ASC, `subject` ASC, `row_id` ASC, `lan_id` ASC),
  CONSTRAINT `fk_translation_language1`
    FOREIGN KEY (`lan_id`)
    REFERENCES `goMusic`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`singer_style`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`singer_style` (
  `singer_id` INT NOT NULL,
  `style_id` INT NOT NULL,
  PRIMARY KEY (`singer_id`, `style_id`),
  INDEX `fk_singer_style_style1_idx` (`style_id` ASC),
  CONSTRAINT `fk_singer_style_style1`
    FOREIGN KEY (`style_id`)
    REFERENCES `goMusic`.`style` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_singer_style_singer1`
    FOREIGN KEY (`singer_id`)
    REFERENCES `goMusic`.`singer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`report` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_id` INT NULL,
  `state` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_type1` (`type_id` ASC),
  CONSTRAINT `fk_report_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`budget`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`budget` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `type_id` INT NOT NULL,
  `price` DECIMAL(2) NOT NULL,
  `report_id` INT NOT NULL,
  `state` TINYINT(1) NULL DEFAULT false,
  PRIMARY KEY (`id`),
  INDEX `fk_budget_type1` (`type_id` ASC),
  INDEX `fk_budget_report1` (`report_id` ASC),
  CONSTRAINT `fk_budget_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_budget_report1`
    FOREIGN KEY (`report_id`)
    REFERENCES `goMusic`.`report` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`money`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`money` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `summ` DECIMAL(2) NOT NULL,
  `way_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_money_user1` (`user_id` ASC),
  INDEX `fk_money_type1` (`way_id` ASC),
  CONSTRAINT `fk_money_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_money_type1`
    FOREIGN KEY (`way_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`organizer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`organizer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `rating` INT NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_organizer_user1` (`user_id` ASC),
  CONSTRAINT `fk_organizer_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`process`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`process` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `step` INT NOT NULL DEFAULT 1,
  `state` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `type_id` INT NOT NULL,
  `budget_id` INT NOT NULL,
  `organizer_id` INT NULL,
  `process_id` INT NOT NULL,
  `state_id` INT NOT NULL,
  `money_id` INT NOT NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_event_type1_idx` (`type_id` ASC),
  INDEX `fk_event_type3_idx` (`state_id` ASC),
  INDEX `fk_event_budget1` (`budget_id` ASC),
  INDEX `fk_event_money1` (`money_id` ASC),
  INDEX `fk_event_organizer1` (`organizer_id` ASC),
  INDEX `fk_event_process1` (`process_id` ASC),
  INDEX `fk_event_location1_idx` (`location_id` ASC),
  CONSTRAINT `fk_event_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_type3`
    FOREIGN KEY (`state_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `goMusic`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_money1`
    FOREIGN KEY (`money_id`)
    REFERENCES `goMusic`.`money` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_organizer1`
    FOREIGN KEY (`organizer_id`)
    REFERENCES `goMusic`.`organizer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_process1`
    FOREIGN KEY (`process_id`)
    REFERENCES `goMusic`.`process` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `goMusic`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`event_singer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`event_singer` (
  `event_id` INT NOT NULL,
  `singer_id` INT NOT NULL,
  PRIMARY KEY (`event_id`, `singer_id`),
  INDEX `fk_concert_singer_singer1_idx` (`singer_id` ASC),
  CONSTRAINT `fk_concert_singer_singer1`
    FOREIGN KEY (`singer_id`)
    REFERENCES `goMusic`.`singer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_concert_singer_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `goMusic`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`advertisement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`advertisement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `datetime` DATETIME NULL,
  `address` VARCHAR(255) NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_advertisement_event1_idx` (`event_id` ASC),
  CONSTRAINT `fk_advertisement_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `goMusic`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`image` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `path` VARCHAR(255) NULL,
  `table` VARCHAR(255) NULL,
  `type_id` INT NULL,
  `row_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_image_type1_idx` (`type_id` ASC),
  CONSTRAINT `fk_image_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`info_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`info_event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `type_id` INT NULL,
  `min_price` DECIMAL(2) NULL,
  `max_price` DECIMAL(2) NULL,
  `count` INT NULL,
  `free` INT NULL,
  `event_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_info_event_type1` (`type_id` ASC),
  INDEX `fk_info_event_event1` (`event_id` ASC),
  CONSTRAINT `fk_info_event_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_info_event_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `goMusic`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`operator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`operator` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`ticket` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `info_event_id` INT NOT NULL,
  `operator_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `price` DECIMAL(2) NULL,
  `bought` TINYINT(1) NULL DEFAULT 0,
  `was` VARCHAR(45) NULL,
  `seat` VARCHAR(255) NULL,
  `qrcode` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_bought_ticket_user1` (`user_id` ASC),
  INDEX `fk_bought_ticket_operator1` (`operator_id` ASC),
  INDEX `fk_ticket_info_event1` (`info_event_id` ASC),
  CONSTRAINT `fk_bought_ticket_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bought_ticket_operator1`
    FOREIGN KEY (`operator_id`)
    REFERENCES `goMusic`.`operator` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ticket_info_event1`
    FOREIGN KEY (`info_event_id`)
    REFERENCES `goMusic`.`info_event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`login` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_login_type1` (`type_id` ASC),
  CONSTRAINT `fk_social_login_user1`
    FOREIGN KEY (`id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_login_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`report_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`report_file` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `budget_id` INT NOT NULL,
  `organizer_id` INT NULL,
  `original_file` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_budget1` (`budget_id` ASC),
  CONSTRAINT `fk_report_budget1`
    FOREIGN KEY (`budget_id`)
    REFERENCES `goMusic`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`member` (
  `event_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `type_id` INT NOT NULL,
  INDEX `fk_member_event1` (`event_id` ASC),
  INDEX `fk_member_user1` (`user_id` ASC),
  INDEX `fk_member_type1` (`type_id` ASC),
  CONSTRAINT `fk_member_event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `goMusic`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `goMusic`.`type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `module` VARCHAR(255) NOT NULL,
  `action` VARCHAR(255) NOT NULL,
  `alias` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `alias` VARCHAR(255) NOT NULL,
  `permission_list` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`user_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_role_user1` (`user_id` ASC),
  INDEX `fk_user_role_role1_idx` (`role_id` ASC),
  CONSTRAINT `fk_user_role_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `goMusic`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `goMusic`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `goMusic`.`repertoire`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `goMusic`.`repertoire` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `type_id` INT NOT NULL,
  `parent_id` INT NULL,
  `link` TEXT NULL,
  `singer_id` INT NOT NULL,
  `image_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_repertoire_singer1` (`singer_id` ASC),
  CONSTRAINT `fk_repertoire_singer1`
    FOREIGN KEY (`singer_id`)
    REFERENCES `goMusic`.`singer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
